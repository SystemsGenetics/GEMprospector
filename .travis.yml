# Much of this setup is borrowed or inspired from the travis.yml files
# of the param, holoviews and related packages.

branches:
  only:
    - master

addons:
  apt:
    packages:
      - libhdf5-serial-dev
      - netcdf-bin
      - libnetcdf-dev

env:
  - GSFORGE_DEMO_DATA="${HOME}/GSForge_demo_data"

language: python

services:
  - docker

python:
  - "3.7"


stages:
  - test_and_build_docs
  - build_dockerfiles
  # Upload to the pypi development repository. eg 1.a1
  - name: pip_dev_package
    if: tag =~ ^v(\d+|\.)+[a-z]\d+$
  # Deploy to the real pypi repository. eg 1.1
  - name: pip_package
    if: tag =~ ^v(\d+|\.)+[^a-z]\d+$
  # For possible future use. This may require a separate development repository.
#  - name: website_dev
#    if: tag =~ ^v(\d+|\.)+[a-z]\d+$ OR tag = website_dev
  - name: website_release
    if: tag =~ ^v(\d+|\.)+[^a-z]\d+$ OR tag = website


install:
  - sudo apt-get install graphviz
  - pip install -r requirements.txt
  - pip install -r doc/requirements.txt
  - pip install .
  - pip install osfclient

jobs:
  include:
    - stage: test_and_build_docs
      script:
        - osf -p rbhfz clone "$GSFORGE_DEMO_DATA"
        - nbsite_generate_modules.py GSForge -d ./doc/Reference_Manual -n GSForge
        - nbsite generate-rst --org SystemsGenetics --project-name GSForge
        - nbsite build --what=html --output=builtdocs
      deploy:
        - provider: pages
          skip_cleanup: true
          local_dir: ./builtdocs
          target_branch: gh-pages
          github_token: $GITHUB_TOKEN
          on:
            branch: master

    - stage: build_dockerfiles
      install: skip
      script:
        - docker-compose build
        - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
        - docker push systemsgenetics/gsforge_interactive:latest
        - docker push systemsgenetics/gsforge_workflow:latest

    - stage: pip_dev_package
      install: skip
      deploy:
        provider: pypi
        server: https://test.pypi.org/legacy/
        distributions: "sdist bdist_wheel"
        on:
          tags: true
        user: $TESTPYPI_USER
        password: $TESTPYPI_PWD

    - stage: pip_package
      install: skip
      deploy:
        provider: pypi
        distributions: "sdist bdist_wheel"
        on:
          tags: true
        user: $PYPI_USER
        password: $PYPI_PWD
